{
  "openapi": "3.0.3",
  "info": {
    "title": "BSK Motorcycle Team - Landing Page API",
    "description": "API Schema para BSK Motorcycle Team Landing Page. Este esquema define y valida todos los endpoints de la aplicación, incluyendo autenticación, eventos, membresías, gamificación y más.",
    "version": "1.0.0",
    "contact": {
      "name": "BSK Motorcycle Team",
      "email": "admin@bskmotorcycleteam.com"
    }
  },
  "servers": [
    {
      "url": "https://yourdomain.com",
      "description": "Production server"
    },
    {
      "url": "https://staging.yourdomain.com",
      "description": "Staging server"
    }
  ],
  "tags": [
    { "name": "Authentication", "description": "Endpoints de autenticación y gestión de usuarios" },
    { "name": "Users", "description": "Gestión de perfiles y datos de usuarios" },
    { "name": "Events", "description": "Gestión de eventos y registro" },
    { "name": "Memberships", "description": "Sistema de membresías y upgrades" },
    { "name": "Gamification", "description": "Sistema de puntos, logros y rankings" },
    { "name": "Admin", "description": "Endpoints administrativos" },
    { "name": "Emergencies", "description": "Sistema SOS de emergencias" },
    { "name": "PQRSDF", "description": "Sistema de peticiones, quejas y reclamos" },
    { "name": "Contact", "description": "Formularios de contacto" }
  ],
  "paths": {
    "/api/auth/register": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Registrar nuevo usuario",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password", "firstName", "lastName"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password", "minLength": 8 },
                  "firstName": { "type": "string", "minLength": 2, "maxLength": 50 },
                  "lastName": { "type": "string", "minLength": 2, "maxLength": 50 },
                  "phone": { "type": "string", "pattern": "^[+]?[\\d\\s()-]+$" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Usuario registrado exitosamente" },
          "400": { "description": "Datos inválidos" },
          "409": { "description": "Email ya registrado" }
        }
      }
    },
    "/api/auth/login": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Iniciar sesión",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": { "type": "string", "format": "email" },
                  "password": { "type": "string", "format": "password" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Login exitoso" },
          "401": { "description": "Credenciales inválidas" }
        }
      }
    },
    "/api/auth/logout": {
      "post": {
        "tags": ["Authentication"],
        "summary": "Cerrar sesión",
        "responses": {
          "200": { "description": "Sesión cerrada" }
        }
      }
    },
    "/api/users/profile": {
      "get": {
        "tags": ["Users"],
        "summary": "Obtener perfil del usuario",
        "responses": {
          "200": { "description": "Perfil del usuario" },
          "401": { "description": "No autenticado" }
        }
      },
      "put": {
        "tags": ["Users"],
        "summary": "Actualizar perfil del usuario",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": { "type": "string", "minLength": 2, "maxLength": 50 },
                  "lastName": { "type": "string", "minLength": 2, "maxLength": 50 },
                  "phone": { "type": "string", "pattern": "^[+]?[\\d\\s()-]+$" },
                  "bio": { "type": "string", "maxLength": 500 }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Perfil actualizado" },
          "400": { "description": "Datos inválidos" },
          "401": { "description": "No autenticado" }
        }
      }
    },
    "/api/users/gamification": {
      "get": {
        "tags": ["Gamification"],
        "summary": "Obtener datos de gamificación del usuario",
        "responses": {
          "200": { "description": "Datos de gamificación" },
          "401": { "description": "No autenticado" }
        }
      },
      "post": {
        "tags": ["Gamification"],
        "summary": "Actualizar puntos de gamificación",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["action"],
                "properties": {
                  "action": {
                    "type": "string",
                    "enum": ["asistencia_evento", "registro_evento", "referir_amigo", "completar_perfil", "bonificacion"]
                  },
                  "metadata": { "type": "object" }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Puntos actualizados" },
          "400": { "description": "Acción inválida" },
          "401": { "description": "No autenticado" }
        }
      }
    },
    "/api/events": {
      "get": {
        "tags": ["Events"],
        "summary": "Listar eventos públicos",
        "parameters": [
          { "name": "page", "in": "query", "schema": { "type": "integer", "minimum": 1, "default": 1 } },
          { "name": "limit", "in": "query", "schema": { "type": "integer", "minimum": 1, "maximum": 50, "default": 10 } },
          { "name": "status", "in": "query", "schema": { "type": "string", "enum": ["upcoming", "past", "all"], "default": "upcoming" } }
        ],
        "responses": {
          "200": { "description": "Lista de eventos" }
        }
      },
      "post": {
        "tags": ["Events"],
        "summary": "Crear nuevo evento (admin only)",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "description", "date", "location"],
                "properties": {
                  "name": { "type": "string", "minLength": 5, "maxLength": 200 },
                  "description": { "type": "string", "minLength": 10 },
                  "date": { "type": "string", "format": "date-time" },
                  "location": { "type": "string" },
                  "maxParticipants": { "type": "integer", "minimum": 1 },
                  "price": { "type": "number", "minimum": 0 },
                  "tags": { "type": "array", "items": { "type": "string" } }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Evento creado" },
          "400": { "description": "Datos inválidos" },
          "401": { "description": "No autenticado" },
          "403": { "description": "Permisos insuficientes" }
        }
      }
    },
    "/api/events/{id}": {
      "get": {
        "tags": ["Events"],
        "summary": "Obtener detalles de un evento",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" } }
        ],
        "responses": {
          "200": { "description": "Detalles del evento" },
          "404": { "description": "Evento no encontrado" }
        }
      },
      "put": {
        "tags": ["Events"],
        "summary": "Actualizar evento (admin only)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" } }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string", "minLength": 5, "maxLength": 200 },
                  "description": { "type": "string", "minLength": 10 },
                  "date": { "type": "string", "format": "date-time" },
                  "location": { "type": "string" },
                  "maxParticipants": { "type": "integer", "minimum": 1 }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Evento actualizado" },
          "400": { "description": "Datos inválidos" },
          "401": { "description": "No autenticado" },
          "403": { "description": "Permisos insuficientes" },
          "404": { "description": "Evento no encontrado" }
        }
      },
      "delete": {
        "tags": ["Events"],
        "summary": "Eliminar evento (admin only)",
        "parameters": [
          { "name": "id", "in": "path", "required": true, "schema": { "type": "string", "pattern": "^[0-9a-fA-F]{24}$" } }
        ],
        "responses": {
          "200": { "description": "Evento eliminado" },
          "401": { "description": "No autenticado" },
          "403": { "description": "Permisos insuficientes" },
          "404": { "description": "Evento no encontrado" }
        }
      }
    },
    "/api/emergencies": {
      "post": {
        "tags": ["Emergencies"],
        "summary": "Crear nueva emergencia",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["title", "description", "location", "priority"],
                "properties": {
                  "title": { "type": "string", "minLength": 5, "maxLength": 100 },
                  "description": { "type": "string", "minLength": 10, "maxLength": 1000 },
                  "location": {
                    "type": "object",
                    "required": ["latitude", "longitude"],
                    "properties": {
                      "latitude": { "type": "number", "minimum": -90, "maximum": 90 },
                      "longitude": { "type": "number", "minimum": -180, "maximum": 180 },
                      "address": { "type": "string" }
                    }
                  },
                  "priority": { "type": "string", "enum": ["low", "medium", "high", "critical"] },
                  "contactPhone": { "type": "string", "pattern": "^[+]?[\\d\\s()-]+$" }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Emergencia creada" },
          "400": { "description": "Datos inválidos" },
          "401": { "description": "No autenticado" }
        }
      }
    },
    "/api/pqrsdf": {
      "post": {
        "tags": ["PQRSDF"],
        "summary": "Crear nueva solicitud PQRSDF",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["tipo", "asunto", "descripcion"],
                "properties": {
                  "tipo": { "type": "string", "enum": ["peticion", "queja", "reclamo", "sugerencia", "denuncia", "felicitacion"] },
                  "asunto": { "type": "string", "minLength": 5, "maxLength": 200 },
                  "descripcion": { "type": "string", "minLength": 20, "maxLength": 2000 },
                  "categoria": { "type": "string", "enum": ["eventos", "membresia", "administrativo", "tecnico", "otro"] },
                  "prioridad": { "type": "string", "enum": ["baja", "media", "alta"], "default": "media" },
                  "adjuntos": { "type": "array", "items": { "type": "string" } }
                }
              }
            }
          }
        },
        "responses": {
          "201": { "description": "Solicitud creada" },
          "400": { "description": "Datos inválidos" },
          "401": { "description": "No autenticado" }
        }
      }
    },
    "/api/contact": {
      "post": {
        "tags": ["Contact"],
        "summary": "Enviar mensaje de contacto",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "message"],
                "properties": {
                  "name": { "type": "string", "minLength": 2, "maxLength": 100 },
                  "email": { "type": "string", "format": "email" },
                  "phone": { "type": "string", "pattern": "^[+]?[\\d\\s()-]+$" },
                  "subject": { "type": "string", "maxLength": 200 },
                  "message": { "type": "string", "minLength": 10, "maxLength": 2000 }
                }
              }
            }
          }
        },
        "responses": {
          "200": { "description": "Mensaje enviado" },
          "400": { "description": "Datos inválidos" },
          "429": { "description": "Demasiadas solicitudes" }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "bsk-access-token"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "error": { "type": "string" },
          "message": { "type": "string" },
          "details": { "type": "object" }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "success": { "type": "boolean" },
          "message": { "type": "string" },
          "data": { "type": "object" }
        }
      }
    }
  },
  "security": [
    { "cookieAuth": [] }
  ]
}
