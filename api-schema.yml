openapi: 3.0.3
info:
  title: BSK Motorcycle Team - Landing Page API
  description: |
    API Schema para BSK Motorcycle Team Landing Page.
    Este esquema define y valida todos los endpoints de la aplicación,
    incluyendo autenticación, eventos, membresías, gamificación y más.
  version: 1.0.0
  contact:
    name: BSK Motorcycle Team
    email: admin@bskmt.com

servers:
  - url: https://bskmt.com
    description: Production server
  - url: https://staging.bskmt.com
    description: Staging server

tags:
  - name: Authentication
    description: Endpoints de autenticación y gestión de usuarios
  - name: Users
    description: Gestión de perfiles y datos de usuarios
  - name: Events
    description: Gestión de eventos y registro
  - name: Memberships
    description: Sistema de membresías y upgrades
  - name: Gamification
    description: Sistema de puntos, logros y rankings
  - name: Admin
    description: Endpoints administrativos
  - name: Emergencies
    description: Sistema SOS de emergencias
  - name: PQRSDF
    description: Sistema de peticiones, quejas y reclamos
  - name: Contact
    description: Formularios de contacto

paths:
  # ============================================
  # AUTHENTICATION ENDPOINTS
  # ============================================
  /api/auth/register:
    post:
      tags:
        - Authentication
      summary: Registrar nuevo usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
                - firstName
                - lastName
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                  minLength: 8
                firstName:
                  type: string
                  minLength: 2
                  maxLength: 50
                lastName:
                  type: string
                  minLength: 2
                  maxLength: 50
                phone:
                  type: string
                  pattern: '^[+]?[\d\s()-]+$'
      responses:
        '201':
          description: Usuario registrado exitosamente
        '400':
          description: Datos inválidos
        '409':
          description: Email ya registrado

  /api/auth/login:
    post:
      tags:
        - Authentication
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
      responses:
        '200':
          description: Login exitoso
        '401':
          description: Credenciales inválidas

  /api/auth/logout:
    post:
      tags:
        - Authentication
      summary: Cerrar sesión
      responses:
        '200':
          description: Sesión cerrada

  /api/auth/verify-email:
    post:
      tags:
        - Authentication
      summary: Verificar email
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
              properties:
                token:
                  type: string
      responses:
        '200':
          description: Email verificado
        '400':
          description: Token inválido

  /api/auth/reset-password:
    post:
      tags:
        - Authentication
      summary: Solicitar reset de password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
      responses:
        '200':
          description: Email de recuperación enviado

  /api/auth/reset-password/confirm:
    post:
      tags:
        - Authentication
      summary: Confirmar reset de password
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - token
                - password
              properties:
                token:
                  type: string
                password:
                  type: string
                  format: password
                  minLength: 8
      responses:
        '200':
          description: Password actualizado
        '400':
          description: Token inválido o expirado

  # ============================================
  # USER ENDPOINTS
  # ============================================
  /api/users/profile:
    get:
      tags:
        - Users
      summary: Obtener perfil del usuario
      responses:
        '200':
          description: Perfil del usuario
        '401':
          description: No autenticado
    
    put:
      tags:
        - Users
      summary: Actualizar perfil del usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                  minLength: 2
                  maxLength: 50
                lastName:
                  type: string
                  minLength: 2
                  maxLength: 50
                phone:
                  type: string
                  pattern: '^[+]?[\d\s()-]+$'
                bio:
                  type: string
                  maxLength: 500
      responses:
        '200':
          description: Perfil actualizado
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado

  /api/users/stats:
    get:
      tags:
        - Users
      summary: Obtener estadísticas del usuario
      responses:
        '200':
          description: Estadísticas del usuario
        '401':
          description: No autenticado

  /api/users/gamification:
    get:
      tags:
        - Gamification
      summary: Obtener datos de gamificación del usuario
      responses:
        '200':
          description: Datos de gamificación
        '401':
          description: No autenticado
    
    post:
      tags:
        - Gamification
      summary: Actualizar puntos de gamificación
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - action
              properties:
                action:
                  type: string
                  enum:
                    - asistencia_evento
                    - registro_evento
                    - referir_amigo
                    - completar_perfil
                    - bonificacion
                metadata:
                  type: object
      responses:
        '200':
          description: Puntos actualizados
        '400':
          description: Acción inválida
        '401':
          description: No autenticado

  /api/users/points:
    get:
      tags:
        - Gamification
      summary: Obtener información de puntos
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 10
      responses:
        '200':
          description: Información de puntos
        '401':
          description: No autenticado
    
    post:
      tags:
        - Gamification
      summary: Otorgar puntos manualmente (admin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targetUserId
                - points
                - reason
              properties:
                targetUserId:
                  type: string
                points:
                  type: integer
                  minimum: 1
                reason:
                  type: string
                  minLength: 5
                action:
                  type: string
                  default: bonificacion
      responses:
        '200':
          description: Puntos otorgados
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes

  /api/users/achievements:
    get:
      tags:
        - Gamification
      summary: Obtener logros del usuario
      responses:
        '200':
          description: Lista de logros
        '401':
          description: No autenticado

  /api/users/leaderboard:
    get:
      tags:
        - Gamification
      summary: Obtener tabla de clasificación
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: includeUser
          in: query
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Tabla de clasificación

  # ============================================
  # EVENTS ENDPOINTS
  # ============================================
  /api/events:
    get:
      tags:
        - Events
      summary: Listar eventos públicos
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
        - name: status
          in: query
          schema:
            type: string
            enum:
              - upcoming
              - past
              - all
            default: upcoming
      responses:
        '200':
          description: Lista de eventos
    
    post:
      tags:
        - Events
      summary: Crear nuevo evento (admin only)
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - description
                - date
                - location
              properties:
                name:
                  type: string
                  minLength: 5
                  maxLength: 200
                description:
                  type: string
                  minLength: 10
                date:
                  type: string
                  format: date-time
                location:
                  type: string
                maxParticipants:
                  type: integer
                  minimum: 1
                price:
                  type: number
                  minimum: 0
                tags:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Evento creado
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes

  /api/events/{id}:
    get:
      tags:
        - Events
      summary: Obtener detalles de un evento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Detalles del evento
        '404':
          description: Evento no encontrado
    
    put:
      tags:
        - Events
      summary: Actualizar evento (admin only)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  minLength: 5
                  maxLength: 200
                description:
                  type: string
                  minLength: 10
                date:
                  type: string
                  format: date-time
                location:
                  type: string
                maxParticipants:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Evento actualizado
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes
        '404':
          description: Evento no encontrado
    
    delete:
      tags:
        - Events
      summary: Eliminar evento (admin only)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Evento eliminado
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes
        '404':
          description: Evento no encontrado

  /api/events/{id}/register:
    post:
      tags:
        - Events
      summary: Registrarse a un evento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Registro exitoso
        '400':
          description: Evento lleno o ya registrado
        '401':
          description: No autenticado
        '404':
          description: Evento no encontrado

  /api/events/{id}/unregister:
    post:
      tags:
        - Events
      summary: Cancelar registro a un evento
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Registro cancelado
        '400':
          description: No estás registrado
        '401':
          description: No autenticado
        '404':
          description: Evento no encontrado

  # ============================================
  # ADMIN EVENTS ENDPOINTS
  # ============================================
  /api/admin/events/{id}/attendance:
    get:
      tags:
        - Admin
      summary: Obtener lista de asistencia
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Lista de asistencia
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes
        '404':
          description: Evento no encontrado
    
    post:
      tags:
        - Admin
      summary: Marcar asistencia
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - userId
                - hasAttended
              properties:
                userId:
                  type: string
                  pattern: '^[0-9a-fA-F]{24}$'
                hasAttended:
                  type: boolean
      responses:
        '200':
          description: Asistencia actualizada
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes
        '404':
          description: Evento o usuario no encontrado

  /api/admin/gamification/assign-points:
    post:
      tags:
        - Admin
      summary: Asignar puntos por evento
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - eventId
                - action
              properties:
                eventId:
                  type: string
                  pattern: '^[0-9a-fA-F]{24}$'
                action:
                  type: string
                  enum:
                    - asistencia_evento
                    - registro_evento
                points:
                  type: integer
                  minimum: 1
      responses:
        '200':
          description: Puntos asignados
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes

  /api/admin/gamification/seed-gamification:
    post:
      tags:
        - Admin
      summary: Inicializar sistema de gamificación
      responses:
        '200':
          description: Sistema inicializado
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes

  # ============================================
  # MEMBERSHIPS ENDPOINTS
  # ============================================
  /api/memberships/current:
    get:
      tags:
        - Memberships
      summary: Obtener membresía actual
      responses:
        '200':
          description: Membresía actual
        '401':
          description: No autenticado

  /api/memberships/progress:
    get:
      tags:
        - Memberships
      summary: Obtener progreso de membresía
      responses:
        '200':
          description: Progreso de membresía
        '401':
          description: No autenticado

  /api/memberships/request-upgrade:
    post:
      tags:
        - Memberships
      summary: Solicitar upgrade de membresía
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - targetType
              properties:
                targetType:
                  type: string
                  enum:
                    - rider
                    - leader
                    - master
                reason:
                  type: string
      responses:
        '200':
          description: Solicitud enviada
        '400':
          description: Upgrade no permitido
        '401':
          description: No autenticado

  /api/memberships/volunteer/apply:
    post:
      tags:
        - Memberships
      summary: Solicitar ser voluntario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - documentsAccepted
              properties:
                documentsAccepted:
                  type: object
                  properties:
                    commitment:
                      type: boolean
                    conduct:
                      type: boolean
                    privacy:
                      type: boolean
                    volunteer:
                      type: boolean
      responses:
        '200':
          description: Solicitud enviada
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado

  /api/memberships/leader/apply:
    post:
      tags:
        - Memberships
      summary: Solicitar ser líder
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - applicationText
              properties:
                applicationText:
                  type: string
                  minLength: 100
                  maxLength: 2000
                attachments:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Solicitud enviada
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado

  # ============================================
  # EMERGENCIES (SOS) ENDPOINTS
  # ============================================
  /api/emergencies:
    get:
      tags:
        - Emergencies
      summary: Listar emergencias
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum:
              - pending
              - in-progress
              - resolved
              - cancelled
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Lista de emergencias
        '401':
          description: No autenticado
    
    post:
      tags:
        - Emergencies
      summary: Crear nueva emergencia
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - title
                - description
                - location
                - priority
              properties:
                title:
                  type: string
                  minLength: 5
                  maxLength: 100
                description:
                  type: string
                  minLength: 10
                  maxLength: 1000
                location:
                  type: object
                  required:
                    - latitude
                    - longitude
                  properties:
                    latitude:
                      type: number
                      minimum: -90
                      maximum: 90
                    longitude:
                      type: number
                      minimum: -180
                      maximum: 180
                    address:
                      type: string
                priority:
                  type: string
                  enum:
                    - low
                    - medium
                    - high
                    - critical
                contactPhone:
                  type: string
                  pattern: '^[+]?[\d\s()-]+$'
      responses:
        '201':
          description: Emergencia creada
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado

  /api/emergencies/pending:
    get:
      tags:
        - Emergencies
      summary: Obtener emergencias pendientes
      parameters:
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
      responses:
        '200':
          description: Emergencias pendientes

  /api/emergencies/{id}:
    get:
      tags:
        - Emergencies
      summary: Obtener detalles de emergencia
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Detalles de emergencia
        '401':
          description: No autenticado
        '404':
          description: Emergencia no encontrada
    
    put:
      tags:
        - Emergencies
      summary: Actualizar estado de emergencia
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - pending
                    - in-progress
                    - resolved
                    - cancelled
                notes:
                  type: string
      responses:
        '200':
          description: Emergencia actualizada
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '404':
          description: Emergencia no encontrada

  # ============================================
  # PQRSDF ENDPOINTS
  # ============================================
  /api/pqrsdf:
    get:
      tags:
        - PQRSDF
      summary: Listar solicitudes PQRSDF
      parameters:
        - name: status
          in: query
          schema:
            type: string
            enum:
              - pendiente
              - en_revision
              - respondida
              - cerrada
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 50
            default: 10
      responses:
        '200':
          description: Lista de solicitudes
        '401':
          description: No autenticado
    
    post:
      tags:
        - PQRSDF
      summary: Crear nueva solicitud PQRSDF
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - tipo
                - asunto
                - descripcion
              properties:
                tipo:
                  type: string
                  enum:
                    - peticion
                    - queja
                    - reclamo
                    - sugerencia
                    - denuncia
                    - felicitacion
                asunto:
                  type: string
                  minLength: 5
                  maxLength: 200
                descripcion:
                  type: string
                  minLength: 20
                  maxLength: 2000
                categoria:
                  type: string
                  enum:
                    - eventos
                    - membresia
                    - administrativo
                    - tecnico
                    - otro
                prioridad:
                  type: string
                  enum:
                    - baja
                    - media
                    - alta
                  default: media
                adjuntos:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: Solicitud creada
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado

  /api/pqrsdf/{id}:
    get:
      tags:
        - PQRSDF
      summary: Obtener detalles de solicitud
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Detalles de solicitud
        '401':
          description: No autenticado
        '404':
          description: Solicitud no encontrada

  /api/pqrsdf/{id}/response:
    post:
      tags:
        - PQRSDF
      summary: Responder solicitud (admin only)
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - respuesta
              properties:
                respuesta:
                  type: string
                  minLength: 10
                adjuntos:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Respuesta enviada
        '400':
          description: Datos inválidos
        '401':
          description: No autenticado
        '403':
          description: Permisos insuficientes
        '404':
          description: Solicitud no encontrada

  /api/pqrsdf/{id}/close:
    post:
      tags:
        - PQRSDF
      summary: Cerrar solicitud
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            pattern: '^[0-9a-fA-F]{24}$'
      responses:
        '200':
          description: Solicitud cerrada
        '400':
          description: Solicitud ya cerrada
        '401':
          description: No autenticado
        '404':
          description: Solicitud no encontrada

  # ============================================
  # CONTACT ENDPOINTS
  # ============================================
  /api/contact:
    post:
      tags:
        - Contact
      summary: Enviar mensaje de contacto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - message
              properties:
                name:
                  type: string
                  minLength: 2
                  maxLength: 100
                email:
                  type: string
                  format: email
                phone:
                  type: string
                  pattern: '^[+]?[\d\s()-]+$'
                subject:
                  type: string
                  maxLength: 200
                message:
                  type: string
                  minLength: 10
                  maxLength: 2000
      responses:
        '200':
          description: Mensaje enviado
        '400':
          description: Datos inválidos
        '429':
          description: Demasiadas solicitudes

  # ============================================
  # CSRF TOKEN ENDPOINT
  # ============================================
  /api/csrf-token:
    get:
      tags:
        - Authentication
      summary: Obtener CSRF token
      responses:
        '200':
          description: CSRF token generado

components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: bsk-access-token
  
  schemas:
    Error:
      type: object
      properties:
        error:
          type: string
        message:
          type: string
        details:
          type: object
    
    Success:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        data:
          type: object

security:
  - cookieAuth: []
