{"version":3,"file":"Store-BI26Zudz.js","sources":["../../src/pages/Store.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport SEOComponent from './home/components/SEOComponent';\r\n\r\n/**\r\n * @typedef {Object} Product\r\n * @property {string} id - Unique identifier for the product.\r\n * @property {string} name - Name of the product.\r\n * @property {string} shortDescription - Short description of the product.\r\n * @property {string} longDescription - Long description of the product.\r\n * @property {number} finalPrice - Final price of the product.\r\n * @property {string} availability - Availability status ('in-stock', 'out-of-stock').\r\n * @property {string} featuredImage - URL of the featured image.\r\n * @property {string[]} gallery - Array of gallery image URLs.\r\n * @property {boolean} newProduct - Indicates if it's a new product.\r\n * @property {string} category - Category of the product.\r\n * @property {Object.<string, string>} technicalSpecifications - Technical specifications as key-value pairs.\r\n * @property {string[]} features - List of features.\r\n * @property {string} [slug] - URL-friendly slug for the product.\r\n */\r\ninterface Product {\r\n  id: string;\r\n  name: string;\r\n  shortDescription: string;\r\n  longDescription: string;\r\n  finalPrice: number;\r\n  availability: 'in-stock' | 'out-of-stock';\r\n  featuredImage: string;\r\n  gallery?: string[];\r\n  newProduct: boolean;\r\n  category: string;\r\n  technicalSpecifications?: { [key: string]: string };\r\n  features?: string[];\r\n  slug?: string;\r\n}\r\n\r\n/**\r\n * @typedef {Object} ProductsApiResponse\r\n * @property {string} status - Status of the API response (e.g., 'success').\r\n * @property {Object} data - Data payload.\r\n * @property {Product[]} data.products - Array of products.\r\n */\r\ninterface ProductsApiResponse {\r\n  status: string;\r\n  data: {\r\n    products: Product[];\r\n  };\r\n}\r\n\r\n/**\r\n * Store component displays a list of products with filtering, searching, and a product modal.\r\n * @returns {JSX.Element}\r\n */\r\nconst Store: React.FC = () => {\r\n  // State for products, loading, and error handling\r\n  const [products, setProducts] = useState<Product[]>([]);\r\n  const [filteredProducts, setFilteredProducts] = useState<Product[]>([]);\r\n  const [loading, setLoading] = useState<boolean>(true);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  // State for search and filters\r\n  const [searchTerm, setSearchTerm] = useState<string>('');\r\n  const [categoryFilter, setCategoryFilter] = useState<string>('all');\r\n  const [availabilityFilter, setAvailabilityFilter] = useState<string>('all');\r\n  const [priceRange, setPriceRange] = useState<[number, number]>([0, 200000]);\r\n\r\n  // State for modal\r\n  const [selectedProduct, setSelectedProduct] = useState<Product | null>(null);\r\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\r\n\r\n  // Fetch products from API\r\n  useEffect(() => {\r\n    const fetchProducts = async () => {\r\n      try {\r\n        const response = await axios.get<ProductsApiResponse>('https://api.bskmt.com/products');\r\n        // Validate response structure and data before setting state\r\n        if (response.data && response.data.status === 'success' && Array.isArray(response.data.data.products)) {\r\n          setProducts(response.data.data.products);\r\n          setFilteredProducts(response.data.data.products); // Initialize filtered products with all products\r\n        } else {\r\n          // More specific error message for API response issues\r\n          throw new Error('Invalid API response structure or data.');\r\n        }\r\n      } catch (err: any) { // Use 'any' for error type as Axios errors can be complex\r\n        // Log the full error for debugging, but show a user-friendly message\r\n        console.error(\"Failed to fetch products:\", err);\r\n        setError('Failed to load products. Please try again later.');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchProducts();\r\n  }, []); // Empty dependency array means this runs once on mount\r\n\r\n  /**\r\n   * Generates a URL-friendly slug from a product name.\r\n   * This function is memoized using useCallback.\r\n   * @param {string} name - The product name.\r\n   * @returns {string} The generated slug.\r\n   */\r\n  const generateSlug = useCallback((name: string): string => {\r\n    return name\r\n      .toLowerCase()\r\n      .replace(/[^\\w\\s-]/gi, '') // Allow hyphens, remove other non-word chars\r\n      .replace(/\\s+/g, '-')\r\n      .replace(/--+/g, '-'); // Replace multiple hyphens with a single one\r\n  }, []);\r\n\r\n  /**\r\n   * Formats a number as a currency string in COP.\r\n   * This function is memoized using useCallback.\r\n   * @param {number} price - The price to format.\r\n   * @returns {string} The formatted price string.\r\n   */\r\n  const formatPrice = useCallback((price: number): string => {\r\n    // Ensure price is a number before formatting\r\n    if (typeof price !== 'number') {\r\n      console.warn('Invalid price type for formatting:', price);\r\n      return 'N/A'; // Or handle as appropriate\r\n    }\r\n    return new Intl.NumberFormat('es-CO', {\r\n      style: 'currency',\r\n      currency: 'COP',\r\n      minimumFractionDigits: 0\r\n    }).format(price);\r\n  }, []);\r\n\r\n  /**\r\n   * Applies filters to the product list based on current filter states.\r\n   * This function is memoized using useCallback.\r\n   */\r\n  const applyFilters = useCallback(() => {\r\n    let result: Product[] = [...products]; // Start with the original products array\r\n\r\n    // Apply search filter\r\n    if (searchTerm) {\r\n      result = result.filter(product =>\r\n        product.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n      );\r\n    }\r\n\r\n    // Apply category filter\r\n    if (categoryFilter !== 'all') {\r\n      result = result.filter(product =>\r\n        // Ensure product.category exists before comparing\r\n        product.category && product.category.toLowerCase() === categoryFilter.toLowerCase()\r\n      );\r\n    }\r\n\r\n    // Apply availability filter\r\n    if (availabilityFilter !== 'all') {\r\n      result = result.filter(product =>\r\n        // Ensure product.availability exists before comparing\r\n        availabilityFilter === 'in-stock' ?\r\n          product.availability === 'in-stock' :\r\n          product.availability !== 'in-stock'\r\n      );\r\n    }\r\n\r\n    // Apply price range filter\r\n    result = result.filter(product =>\r\n      // Ensure product.finalPrice is a number\r\n      typeof product.finalPrice === 'number' &&\r\n      product.finalPrice >= priceRange[0] &&\r\n      product.finalPrice <= priceRange[1]\r\n    );\r\n\r\n    setFilteredProducts(result);\r\n  }, [searchTerm, categoryFilter, availabilityFilter, priceRange, products]); // Dependencies for applyFilters\r\n\r\n  useEffect(() => {\r\n    applyFilters(); // Call the memoized filter function\r\n  }, [applyFilters]); // Dependency array for useEffect\r\n\r\n  /**\r\n   * Opens the product modal with the selected product.\r\n   * This function is memoized using useCallback.\r\n   * @param {Product} product - The product to display in the modal.\r\n   */\r\n  const openProductModal = useCallback((product: Product): void => {\r\n    setSelectedProduct(product);\r\n    setIsModalOpen(true);\r\n    document.body.style.overflow = 'hidden'; // Prevent scrolling when modal is open\r\n  }, []); // No dependencies, as it only sets state based on passed product\r\n\r\n  /**\r\n   * Closes the product modal.\r\n   * This function is memoized using useCallback.\r\n   */\r\n  const closeProductModal = useCallback((): void => {\r\n    setIsModalOpen(false);\r\n    setSelectedProduct(null); // Clear selected product when closing modal\r\n    document.body.style.overflow = 'auto'; // Re-enable scrolling\r\n  }, []); // No dependencies\r\n\r\n  // Get unique categories from products\r\n  // Memoize categories to prevent re-calculation on every render if products don't change\r\n  const categories: string[] = React.useMemo(() => {\r\n    const uniqueCategories = new Set(products.map(product => product.category).filter(Boolean));\r\n    return ['all', ...Array.from(uniqueCategories)];\r\n  }, [products]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"flex justify-center items-center min-h-screen\">\r\n        <div className=\"animate-spin rounded-full h-16 w-16 border-t-4 border-b-4 border-red-500\"></div>\r\n        <p className=\"ml-4 text-lg text-gray-700\">Loading products...</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return (\r\n      <div className=\"text-center py-10\">\r\n        <h2 className=\"text-2xl font-bold text-red-500 mb-4\">Error loading products</h2>\r\n        <p className=\"text-gray-600\">{error}</p>\r\n        <button\r\n          onClick={() => window.location.reload()} // Simple reload to retry fetching\r\n          className=\"mt-4 px-6 py-2 bg-blue-500 text-white rounded-md hover:bg-blue-600 transition-colors\"\r\n        >\r\n          Retry\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mx-auto px-4 py-8\">\r\n      <SEOComponent\r\n        title=\"Tienda - BSK Motorcycle Team\"\r\n        description=\"Encuentra la mercancía oficial de BSK Motorcycle Team. Ropa, accesorios y más para los verdaderos amantes de las motos.\"\r\n      />\r\n      {/* Header */}\r\n      <div className=\"text-center mb-12\">\r\n        <h1 className=\"text-4xl font-bold text-gray-900 mb-2\">BSK MT Store</h1>\r\n        <p className=\"text-lg text-gray-600\">Official merchandise for motorcycle enthusiasts</p>\r\n      </div>\r\n\r\n      {/* Search and Filters */}\r\n      <div className=\"bg-white p-6 rounded-lg shadow-md mb-8\">\r\n        <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\r\n          {/* Search */}\r\n          <div className=\"md:col-span-2\">\r\n            <label htmlFor=\"search\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Search Products\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              id=\"search\"\r\n              placeholder=\"Search by product name...\"\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n              value={searchTerm}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setSearchTerm(e.target.value)}\r\n              aria-label=\"Search products by name\"\r\n            />\r\n          </div>\r\n\r\n          {/* Category Filter */}\r\n          <div>\r\n            <label htmlFor=\"category\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Category\r\n            </label>\r\n            <select\r\n              id=\"category\"\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n              value={categoryFilter}\r\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setCategoryFilter(e.target.value)}\r\n              aria-label=\"Filter products by category\"\r\n            >\r\n              {categories.map(category => (\r\n                <option key={category} value={category}>\r\n                  {category === 'all' ? 'All Categories' : category.charAt(0).toUpperCase() + category.slice(1)}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n\r\n          {/* Availability Filter */}\r\n          <div>\r\n            <label htmlFor=\"availability\" className=\"block text-sm font-medium text-gray-700 mb-1\">\r\n              Availability\r\n            </label>\r\n            <select\r\n              id=\"availability\"\r\n              className=\"w-full px-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-red-500\"\r\n              value={availabilityFilter}\r\n              onChange={(e: React.ChangeEvent<HTMLSelectElement>) => setAvailabilityFilter(e.target.value)}\r\n              aria-label=\"Filter products by availability\"\r\n            >\r\n              <option value=\"all\">All Products</option>\r\n              <option value=\"in-stock\">In Stock</option>\r\n              <option value=\"out-of-stock\">Out of Stock</option>\r\n            </select>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Price Range Filter */}\r\n        <div className=\"mt-4\">\r\n          <label className=\"block text-sm font-medium text-gray-700 mb-2\">\r\n            Price Range: {formatPrice(priceRange[0])} - {formatPrice(priceRange[1])}\r\n          </label>\r\n          <div className=\"flex items-center space-x-4\">\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"200000\"\r\n              step=\"10000\"\r\n              value={priceRange[0]}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPriceRange([parseInt(e.target.value, 10), priceRange[1]])}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n              aria-label=\"Minimum price\"\r\n            />\r\n            <input\r\n              type=\"range\"\r\n              min=\"0\"\r\n              max=\"200000\"\r\n              step=\"10000\"\r\n              value={priceRange[1]}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => setPriceRange([priceRange[0], parseInt(e.target.value, 10)])}\r\n              className=\"w-full h-2 bg-gray-200 rounded-lg appearance-none cursor-pointer\"\r\n              aria-label=\"Maximum price\"\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Products Grid */}\r\n      {filteredProducts.length === 0 ? (\r\n        <div className=\"text-center py-12\">\r\n          <h3 className=\"text-xl font-semibold text-gray-700\">No products found matching your criteria</h3>\r\n          <button\r\n            onClick={() => {\r\n              setSearchTerm('');\r\n              setCategoryFilter('all');\r\n              setAvailabilityFilter('all');\r\n              setPriceRange([0, 200000]);\r\n            }}\r\n            className=\"mt-4 px-6 py-2 bg-red-500 text-white rounded-md hover:bg-red-600 transition-colors\"\r\n            aria-label=\"Reset all filters\"\r\n          >\r\n            Reset Filters\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div className=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\r\n          {filteredProducts.map((product) => (\r\n            <div\r\n              key={product.id}\r\n              className=\"bg-white rounded-lg shadow-md overflow-hidden hover:shadow-xl transition-shadow duration-300\"\r\n              role=\"listitem\"\r\n            >\r\n              {/* Product Image */}\r\n              <div\r\n                className=\"h-64 bg-gray-100 relative overflow-hidden cursor-pointer\"\r\n                onClick={() => openProductModal(product)}\r\n                onKeyPress={(e: React.KeyboardEvent<HTMLDivElement>) => {\r\n                  if (e.key === 'Enter' || e.key === ' ') {\r\n                    openProductModal(product);\r\n                  }\r\n                }}\r\n                tabIndex={0}\r\n                role=\"button\"\r\n                aria-label={`View details for ${product.name}`}\r\n              >\r\n                <img\r\n                  src={product.featuredImage}\r\n                  alt={product.name}\r\n                  className=\"w-full h-full object-cover hover:scale-105 transition-transform duration-300\"\r\n                  onError={(e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n                    // Fallback image for broken links\r\n                    e.currentTarget.src = 'https://via.placeholder.com/300x300?text=Image+Not+Available';\r\n                    e.currentTarget.alt = 'Image not available'; // Update alt text for fallback\r\n                  }}\r\n                  loading=\"lazy\"\r\n                  crossOrigin=\"anonymous\"\r\n                />\r\n                {product.newProduct && (\r\n                  <div className=\"absolute top-2 left-2 bg-red-500 text-white px-2 py-1 text-xs font-bold rounded\">\r\n                    NEW\r\n                  </div>\r\n                )}\r\n              </div>\r\n\r\n              {/* Product Info */}\r\n              <div className=\"p-4\">\r\n                <h3\r\n                  className=\"font-bold text-lg mb-1 cursor-pointer hover:text-red-500\"\r\n                  onClick={() => openProductModal(product)}\r\n                  onKeyPress={(e: React.KeyboardEvent<HTMLHeadingElement>) => {\r\n                    if (e.key === 'Enter' || e.key === ' ') {\r\n                      openProductModal(product);\r\n                    }\r\n                  }}\r\n                  tabIndex={0}\r\n                  role=\"button\"\r\n                  aria-label={`View details for ${product.name}`}\r\n                >\r\n                  {product.name}\r\n                </h3>\r\n                <p className=\"text-gray-600 text-sm mb-2 line-clamp-2\">\r\n                  {product.shortDescription}\r\n                </p>\r\n                <div className=\"flex justify-between items-center mt-3\">\r\n                  <span className=\"font-bold text-red-500\">\r\n                    {formatPrice(product.finalPrice)}\r\n                  </span>\r\n                  <span className={`text-xs px-2 py-1 rounded ${product.availability === 'in-stock' ?\r\n                    'bg-green-100 text-green-800' :\r\n                    'bg-red-100 text-red-800'\r\n                    }`}>\r\n                    {product.availability === 'in-stock' ? 'In Stock' : 'Out of Stock'}\r\n                  </span>\r\n                </div>\r\n\r\n                {/* Action Buttons */}\r\n                <div className=\"mt-4 flex space-x-2\">\r\n                  <button\r\n                    onClick={() => openProductModal(product)}\r\n                    className=\"flex-1 py-2 bg-gray-100 text-gray-800 rounded hover:bg-gray-200 transition-colors\"\r\n                    aria-label={`Open details for ${product.name}`}\r\n                  >\r\n                    Details\r\n                  </button>\r\n                  <a\r\n                    href={`https://tienda.bskmt.com/producto/${product.slug || generateSlug(product.name)}`}\r\n                    target=\"_blank\"\r\n                    rel=\"noopener noreferrer\"\r\n                    className={`flex-1 py-2 text-center rounded transition-colors ${product.availability === 'in-stock' ?\r\n                      'bg-red-500 text-white hover:bg-red-600' :\r\n                      'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                      }`}\r\n                    aria-disabled={product.availability !== 'in-stock'}\r\n                    tabIndex={product.availability !== 'in-stock' ? -1 : 0}\r\n                  >\r\n                    Buy Now\r\n                  </a>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Product Modal */}\r\n      {isModalOpen && selectedProduct && (\r\n        <>\r\n          {/* Background overlay */}\r\n          <div\r\n            className=\"fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity z-40\"\r\n            onClick={closeProductModal}\r\n          ></div>\r\n\r\n          {/* Modal content */}\r\n          <div\r\n            className=\"fixed inset-0 z-50 overflow-y-auto\"\r\n            role=\"dialog\"\r\n            aria-modal=\"true\"\r\n            aria-labelledby=\"product-modal-title\"\r\n          >\r\n            <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n              <div className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl sm:w-full\">\r\n                <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n                  <div className=\"sm:flex sm:items-start\">\r\n                    {/* Product Images */}\r\n                    <div className=\"w-full sm:w-1/2 mb-4 sm:mb-0 sm:pr-4\">\r\n                      <div className=\"h-64 sm:h-96 bg-gray-100 rounded-lg overflow-hidden mb-2\">\r\n                        <img\r\n                          src={selectedProduct.featuredImage}\r\n                          alt={selectedProduct.name}\r\n                          className=\"w-full h-full object-cover\"\r\n                          onError={(e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n                            e.currentTarget.src = 'https://via.placeholder.com/600x600?text=Image+Not+Available';\r\n                            e.currentTarget.alt = 'Image not available';\r\n                          }}\r\n                          crossOrigin=\"anonymous\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"grid grid-cols-3 gap-2\">\r\n                        {selectedProduct.gallery && Array.isArray(selectedProduct.gallery) && selectedProduct.gallery.slice(0, 3).map((image, index) => (\r\n                          <div key={index} className=\"h-24 bg-gray-100 rounded overflow-hidden\">\r\n                            <img\r\n                              src={image}\r\n                              alt={`${selectedProduct.name} thumbnail ${index + 1}`}\r\n                              className=\"w-full h-full object-cover\"\r\n                              onError={(e: React.SyntheticEvent<HTMLImageElement, Event>) => {\r\n                                e.currentTarget.src = 'https://via.placeholder.com/100x100?text=Thumb';\r\n                                e.currentTarget.alt = 'Thumbnail not available';\r\n                              }}\r\n                              crossOrigin=\"anonymous\"\r\n                            />\r\n                          </div>\r\n                        ))}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Product Details */}\r\n                    <div className=\"w-full sm:w-1/2\">\r\n                      <h3 id=\"product-modal-title\" className=\"text-2xl font-bold text-gray-900 mb-2\">\r\n                        {selectedProduct.name}\r\n                      </h3>\r\n                      <div className=\"flex items-center mb-4\">\r\n                        <span className=\"text-xl font-bold text-red-500 mr-4\">\r\n                          {formatPrice(selectedProduct.finalPrice)}\r\n                        </span>\r\n                        <span className={`text-sm px-2 py-1 rounded ${selectedProduct.availability === 'in-stock' ?\r\n                            'bg-green-100 text-green-800' :\r\n                            'bg-red-100 text-red-800'\r\n                          }`}>\r\n                          {selectedProduct.availability === 'in-stock' ? 'In Stock' : 'Out of Stock'}\r\n                        </span>\r\n                      </div>\r\n\r\n                      <div className=\"mb-4\">\r\n                        <h4 className=\"font-semibold text-gray-800 mb-1\">Description</h4>\r\n                        <p className=\"text-gray-600\">{selectedProduct.longDescription}</p>\r\n                      </div>\r\n\r\n                      {selectedProduct.technicalSpecifications && Object.keys(selectedProduct.technicalSpecifications).length > 0 && (\r\n                        <div className=\"mb-4\">\r\n                          <h4 className=\"font-semibold text-gray-800 mb-1\">Technical Specifications</h4>\r\n                          <ul className=\"text-gray-600\">\r\n                            {Object.entries(selectedProduct.technicalSpecifications).map(([key, value]) => (\r\n                              <li key={key} className=\"flex\">\r\n                                <span className=\"font-medium w-32 capitalize\">{key}:</span>\r\n                                <span>{value}</span>\r\n                              </li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n\r\n                      {selectedProduct.features && Array.isArray(selectedProduct.features) && selectedProduct.features.length > 0 && (\r\n                        <div className=\"mb-4\">\r\n                          <h4 className=\"font-semibold text-gray-800 mb-1\">Features</h4>\r\n                          <ul className=\"list-disc list-inside text-gray-600\">\r\n                            {selectedProduct.features.map((feature, index) => (\r\n                              <li key={index}>{feature}</li>\r\n                            ))}\r\n                          </ul>\r\n                        </div>\r\n                      )}\r\n\r\n                      <div className=\"mt-6 flex space-x-3\">\r\n                        <a\r\n                          href={`https://tienda.bskmt.com/producto/${selectedProduct.slug || generateSlug(selectedProduct.name)}`}\r\n                          target=\"_blank\"\r\n                          rel=\"noopener noreferrer\"\r\n                          className={`flex-1 py-3 text-center rounded transition-colors ${selectedProduct.availability === 'in-stock' ?\r\n                              'bg-red-500 text-white hover:bg-red-600' :\r\n                              'bg-gray-300 text-gray-500 cursor-not-allowed'\r\n                            }`}\r\n                          aria-disabled={selectedProduct.availability !== 'in-stock'}\r\n                          tabIndex={selectedProduct.availability !== 'in-stock' ? -1 : 0}\r\n                        >\r\n                          Buy Now\r\n                        </a>\r\n                        <button\r\n                          onClick={closeProductModal}\r\n                          className=\"flex-1 py-3 bg-gray-200 text-gray-800 rounded hover:bg-gray-300 transition-colors\"\r\n                          aria-label=\"Close product details modal\"\r\n                        >\r\n                          Close\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Store;"],"names":["Store","products","setProducts","useState","filteredProducts","setFilteredProducts","loading","setLoading","error","setError","searchTerm","setSearchTerm","categoryFilter","setCategoryFilter","availabilityFilter","setAvailabilityFilter","priceRange","setPriceRange","selectedProduct","setSelectedProduct","isModalOpen","setIsModalOpen","useEffect","response","axios","err","generateSlug","useCallback","name","formatPrice","price","applyFilters","result","product","openProductModal","closeProductModal","categories","React","uniqueCategories","jsxs","jsx","SEOComponent","e","category","Fragment","image","index","key","value","feature"],"mappings":"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"}