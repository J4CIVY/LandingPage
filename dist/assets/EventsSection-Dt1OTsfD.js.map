{"version":3,"file":"EventsSection-Dt1OTsfD.js","sources":["../../node_modules/date-fns/addDays.mjs","../../node_modules/date-fns/addMonths.mjs","../../node_modules/date-fns/isSameDay.mjs","../../node_modules/date-fns/endOfMonth.mjs","../../node_modules/date-fns/startOfMonth.mjs","../../node_modules/date-fns/endOfWeek.mjs","../../node_modules/date-fns/isSameMonth.mjs","../../node_modules/date-fns/subMonths.mjs","../../src/pages/home/components/Calendar.tsx","../../src/pages/home/components/EventModal.tsx","../../src/pages/home/components/EventsSection.tsx"],"sourcesContent":["import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of days to be added.\n *\n * @returns The new date with the days added\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * const result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\nexport function addDays(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  _date.setDate(_date.getDate() + amount);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default addDays;\n","import { toDate } from \"./toDate.mjs\";\nimport { constructFrom } from \"./constructFrom.mjs\";\n\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be added.\n *\n * @returns The new date with the months added\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * const result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n *\n * // Add one month to 30 January 2023:\n * const result = addMonths(new Date(2023, 0, 30), 1)\n * //=> Tue Feb 28 2023 00:00:00\n */\nexport function addMonths(date, amount) {\n  const _date = toDate(date);\n  if (isNaN(amount)) return constructFrom(date, NaN);\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return _date;\n  }\n  const dayOfMonth = _date.getDate();\n\n  // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 0, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n  const endOfDesiredMonth = constructFrom(date, _date.getTime());\n  endOfDesiredMonth.setMonth(_date.getMonth() + amount + 1, 0);\n  const daysInMonth = endOfDesiredMonth.getDate();\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    _date.setFullYear(\n      endOfDesiredMonth.getFullYear(),\n      endOfDesiredMonth.getMonth(),\n      dayOfMonth,\n    );\n    return _date;\n  }\n}\n\n// Fallback for modularized imports:\nexport default addMonths;\n","import { startOfDay } from \"./startOfDay.mjs\";\n\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day (and year and month)?\n *\n * @description\n * Are the given dates in the same day (and year and month)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n\n * @returns The dates are in the same day (and year and month)\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n *\n * @example\n * // Are 4 September and 4 October in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2014, 9, 4))\n * //=> false\n *\n * @example\n * // Are 4 September, 2014 and 4 September, 2015 in the same day?\n * const result = isSameDay(new Date(2014, 8, 4), new Date(2015, 8, 4))\n * //=> false\n */\nexport function isSameDay(dateLeft, dateRight) {\n  const dateLeftStartOfDay = startOfDay(dateLeft);\n  const dateRightStartOfDay = startOfDay(dateRight);\n\n  return +dateLeftStartOfDay === +dateRightStartOfDay;\n}\n\n// Fallback for modularized imports:\nexport default isSameDay;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The end of a month\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * const result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\nexport function endOfMonth(date) {\n  const _date = toDate(date);\n  const month = _date.getMonth();\n  _date.setFullYear(_date.getFullYear(), month + 1, 0);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfMonth;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n *\n * @returns The start of a month\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * const result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function startOfMonth(date) {\n  const _date = toDate(date);\n  _date.setDate(1);\n  _date.setHours(0, 0, 0, 0);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default startOfMonth;\n","import { toDate } from \"./toDate.mjs\";\nimport { getDefaultOptions } from \"./_lib/defaultOptions.mjs\";\n\n/**\n * The {@link endOfWeek} function options.\n */\n\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The original date\n * @param options - An object with options\n *\n * @returns The end of a week\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * const result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\nexport function endOfWeek(date, options) {\n  const defaultOptions = getDefaultOptions();\n  const weekStartsOn =\n    options?.weekStartsOn ??\n    options?.locale?.options?.weekStartsOn ??\n    defaultOptions.weekStartsOn ??\n    defaultOptions.locale?.options?.weekStartsOn ??\n    0;\n\n  const _date = toDate(date);\n  const day = _date.getDay();\n  const diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n\n  _date.setDate(_date.getDate() + diff);\n  _date.setHours(23, 59, 59, 999);\n  return _date;\n}\n\n// Fallback for modularized imports:\nexport default endOfWeek;\n","import { toDate } from \"./toDate.mjs\";\n\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month (and year)?\n *\n * @description\n * Are the given dates in the same month (and year)?\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param dateLeft - The first date to check\n * @param dateRight - The second date to check\n *\n * @returns The dates are in the same month (and year)\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n *\n * @example\n * // Are 2 September 2014 and 25 September 2015 in the same month?\n * const result = isSameMonth(new Date(2014, 8, 2), new Date(2015, 8, 25))\n * //=> false\n */\nexport function isSameMonth(dateLeft, dateRight) {\n  const _dateLeft = toDate(dateLeft);\n  const _dateRight = toDate(dateRight);\n  return (\n    _dateLeft.getFullYear() === _dateRight.getFullYear() &&\n    _dateLeft.getMonth() === _dateRight.getMonth()\n  );\n}\n\n// Fallback for modularized imports:\nexport default isSameMonth;\n","import { addMonths } from \"./addMonths.mjs\";\n\n/**\n * @name subMonths\n * @category Month Helpers\n * @summary Subtract the specified number of months from the given date.\n *\n * @description\n * Subtract the specified number of months from the given date.\n *\n * @typeParam DateType - The `Date` type, the function operates on. Gets inferred from passed arguments. Allows to use extensions like [`UTCDate`](https://github.com/date-fns/utc).\n *\n * @param date - The date to be changed\n * @param amount - The amount of months to be subtracted.\n *\n * @returns The new date with the months subtracted\n *\n * @example\n * // Subtract 5 months from 1 February 2015:\n * const result = subMonths(new Date(2015, 1, 1), 5)\n * //=> Mon Sep 01 2014 00:00:00\n */\nexport function subMonths(date, amount) {\n  return addMonths(date, -amount);\n}\n\n// Fallback for modularized imports:\nexport default subMonths;\n","import React from \"react\";\r\nimport { FaArrowLeft, FaArrowRight } from 'react-icons/fa';\r\nimport { format, startOfMonth, endOfMonth, startOfWeek, endOfWeek, addMonths, subMonths, isSameMonth, isSameDay, addDays } from 'date-fns';\r\nimport { es } from 'date-fns/locale';\r\nimport { Event } from '../types'; // Import the Event interface\r\n\r\n/**\r\n * @interface CalendarProps\r\n * @property {Event[]} events - An array of event objects to display on the calendar.\r\n * @property {Date} currentMonth - The currently displayed month in the calendar.\r\n * @property {React.Dispatch<React.SetStateAction<Date>>} setCurrentMonth - Function to update the current month.\r\n * @property {(event: Event) => void} onEventClick - Callback function when an event on the calendar is clicked.\r\n */\r\ninterface CalendarProps {\r\n  events: Event[];\r\n  currentMonth: Date;\r\n  setCurrentMonth: React.Dispatch<React.SetStateAction<Date>>;\r\n  onEventClick: (event: Event) => void;\r\n}\r\n\r\nconst Calendar: React.FC<CalendarProps> = ({ events, currentMonth, setCurrentMonth, onEventClick }) => {\r\n  /**\r\n   * Navigates to the next month in the calendar.\r\n   */\r\n  const goToNextMonth = (): void => {\r\n    setCurrentMonth(addMonths(currentMonth, 1));\r\n  };\r\n\r\n  /**\r\n   * Navigates to the previous month in the calendar.\r\n   */\r\n  const goToPrevMonth = (): void => {\r\n    setCurrentMonth(subMonths(currentMonth, 1));\r\n  };\r\n\r\n  /**\r\n   * Formats a date to a Spanish month and year string.\r\n   * @param {Date} date - The date to format.\r\n   * @returns {string} The formatted date string.\r\n   */\r\n  const formatDateSpanish = (date: Date): string => {\r\n    return format(date, 'MMMM yyyy', { locale: es });\r\n  };\r\n\r\n  /**\r\n   * Renders the calendar header with month navigation buttons.\r\n   * @returns {JSX.Element} The header JSX.\r\n   */\r\n  const renderHeader = (): JSX.Element => {\r\n    return (\r\n      <div className=\"flex items-center justify-between mb-4\">\r\n        <button \r\n          onClick={goToPrevMonth}\r\n          className=\"p-2 rounded-full hover:bg-gray-200 transition\"\r\n          aria-label=\"Mes anterior\"\r\n        >\r\n          <FaArrowLeft className=\"text-slate-950\" />\r\n        </button>\r\n        <h3 className=\"text-xl font-bold text-slate-950 capitalize\">\r\n          {formatDateSpanish(currentMonth)}\r\n        </h3>\r\n        <button \r\n          onClick={goToNextMonth}\r\n          className=\"p-2 rounded-full hover:bg-gray-200 transition\"\r\n          aria-label=\"Mes siguiente\"\r\n        >\r\n          <FaArrowRight className=\"text-slate-950\" />\r\n        </button>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Renders the day names (e.g., Dom, Lun, Mar).\r\n   * @returns {JSX.Element} The day names JSX.\r\n   */\r\n  const renderDays = (): JSX.Element => {\r\n    const dayNames: string[] = ['Dom', 'Lun', 'Mar', 'Mié', 'Jue', 'Vie', 'Sáb'];\r\n    \r\n    return (\r\n      <div className=\"grid grid-cols-7 mb-2\">\r\n        {dayNames.map((day, i) => (\r\n          <div className=\"text-center font-semibold text-sm py-2\" key={i}>\r\n            {day}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  /**\r\n   * Renders the calendar cells (days of the month) with events.\r\n   * @returns {JSX.Element} The calendar cells JSX.\r\n   */\r\n  const renderCells = (): JSX.Element => {\r\n    const monthStart: Date = startOfMonth(currentMonth);\r\n    const monthEnd: Date = endOfMonth(currentMonth);\r\n    const startDate: Date = startOfWeek(monthStart, { locale: es });\r\n    const endDate: Date = endOfWeek(monthEnd, { locale: es });\r\n\r\n    const rows: JSX.Element[] = [];\r\n    let days: JSX.Element[] = [];\r\n    let day: Date = startDate;\r\n\r\n    while (day <= endDate) {\r\n      for (let i = 0; i < 7; i++) {\r\n        const currentDay: Date = day;\r\n        const dayEvents: Event[] = events.filter((event: Event) => {\r\n          // Ensure event.startDate is a valid ISO string before parsing\r\n          if (!event.startDate) return false;\r\n          const eventDate: Date = new Date(event.startDate);\r\n          return isSameDay(eventDate, currentDay);\r\n        });\r\n\r\n        days.push(\r\n          <div\r\n            className={`min-h-24 p-1 border border-gray-200 flex flex-col ${\r\n              !isSameMonth(currentDay, monthStart) ? 'text-gray-400 bg-gray-50' : 'text-slate-950 bg-white'\r\n            } ${isSameDay(currentDay, new Date()) ? 'bg-green-400 bg-opacity-20' : ''}`}\r\n            key={currentDay.toISOString()} // Use ISO string for unique and stable key\r\n          >\r\n            <span className=\"text-sm font-medium self-end\">{format(currentDay, 'd')}</span>\r\n            <div className=\"flex-1 overflow-y-auto custom-scrollbar\"> {/* Added custom-scrollbar class */}\r\n              {dayEvents.map((event: Event) => (\r\n                <button \r\n                  key={event._id} // Use event ID for unique key\r\n                  className=\"text-xs p-1 my-0.5 rounded bg-red-600 text-white truncate w-full text-left\"\r\n                  title={event.name}\r\n                  onClick={() => onEventClick(event)} // Pass event to handler\r\n                  aria-label={`Ver detalles del evento ${event.name}`}\r\n                >\r\n                  {event.name}\r\n                </button>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        );\r\n        day = addDays(day, 1); // Move to the next day\r\n      }\r\n      rows.push(\r\n        <div className=\"grid grid-cols-7\" key={day.toISOString()}> {/* Use ISO string for row key */}\r\n          {days}\r\n        </div>\r\n      );\r\n      days = []; // Reset days array for the next week\r\n    }\r\n    return <div className=\"mb-4 border-t border-l border-gray-200\">{rows}</div>; // Added top and left border for grid\r\n  };\r\n\r\n  return (\r\n    <div className=\"calendar-container\">\r\n      {renderHeader()}\r\n      {renderDays()}\r\n      {renderCells()}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calendar;","import React, { useEffect } from 'react';\r\nimport { format, parseISO } from 'date-fns';\r\nimport { es } from 'date-fns/locale';\r\nimport { Event } from '../types'; // Import the Event interface\r\n\r\n/**\r\n * @interface EventModalProps\r\n * @property {Event | null} event - The event object to display in the modal. Null if no event is selected.\r\n * @property {() => void} onClose - Callback function to close the modal.\r\n */\r\ninterface EventModalProps {\r\n  event: Event | null;\r\n  onClose: () => void;\r\n}\r\n\r\nconst EventModal: React.FC<EventModalProps> = ({ event, onClose }) => {\r\n  // If event is null, render nothing. This check is important for conditional rendering.\r\n  if (!event) return null;\r\n\r\n  // Effect to control body scroll when modal is open/closed\r\n  useEffect(() => {\r\n    document.body.style.overflow = 'hidden'; // Disable scroll on body\r\n    return () => {\r\n      document.body.style.overflow = 'auto'; // Re-enable scroll on body when component unmounts\r\n    };\r\n  }, []); // Empty dependency array means this effect runs once on mount and cleans up on unmount\r\n\r\n  /**\r\n   * Helper function to format time strings (e.g., \"14:30:00\" to \"14:30\").\r\n   * @param {string | undefined} timeString - The time string to format.\r\n   * @returns {string} The formatted time string, or an empty string if input is undefined.\r\n   */\r\n  const formatTime = (timeString: string | undefined): string => {\r\n    if (!timeString) return '';\r\n    const [hours, minutes] = timeString.split(':');\r\n    return `${hours}:${minutes}`;\r\n  };\r\n\r\n  /**\r\n   * Helper function to determine difficulty level color.\r\n   * @param {'low' | 'medium' | 'high'} difficulty - The difficulty level.\r\n   * @returns {string} Tailwind CSS class for the background color.\r\n   */\r\n  const getDifficultyColor = (difficulty: 'low' | 'medium' | 'high'): string => {\r\n    switch (difficulty) {\r\n      case 'low': return 'bg-green-400';\r\n      case 'medium': return 'bg-yellow-500';\r\n      case 'high': return 'bg-red-500';\r\n      default: return 'bg-gray-500';\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Helper function to determine event type color.\r\n   * @param {string} type - The event type.\r\n   * @returns {string} Tailwind CSS class for the background color.\r\n   */\r\n  const getEventTypeColor = (type: string): string => {\r\n    switch (type) {\r\n      case 'Ride': return 'bg-blue-500';\r\n      case 'Meetup': return 'bg-purple-500';\r\n      default: return 'bg-gray-500';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* Overlay for the modal, covers the entire screen and handles closing when clicked */}\r\n      <div \r\n        className=\"fixed inset-0 bg-black bg-opacity-75 z-40\"\r\n        onClick={onClose} // Close modal when overlay is clicked\r\n        aria-hidden=\"true\" // Hide from accessibility tree as it's just a backdrop\r\n      />\r\n\r\n      {/* Modal container */}\r\n      <div \r\n        className=\"fixed inset-0 z-50 overflow-y-auto\"\r\n        role=\"dialog\" // ARIA role for dialog\r\n        aria-modal=\"true\" // Indicates that the dialog is modal and blocks interaction with the rest of the page\r\n        aria-labelledby=\"modal-headline\" // Links to the main title of the modal for accessibility\r\n      >\r\n        {/* Flex container to center the modal vertically and horizontally */}\r\n        <div className=\"flex items-center justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0\">\r\n          {/* Actual modal content area */}\r\n          <div \r\n            className=\"inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-4xl w-full\"\r\n          >\r\n            <div className=\"bg-white px-4 pt-5 pb-4 sm:p-6 sm:pb-4\">\r\n              <div className=\"sm:flex sm:items-start\">\r\n                <div className=\"mt-3 text-center sm:mt-0 sm:text-left w-full\">\r\n                  {/* Header with event name and close button */}\r\n                  <div className=\"flex justify-between items-start\">\r\n                    <div>\r\n                      <h3 className=\"text-3xl leading-6 font-bold text-gray-900\" id=\"modal-headline\">\r\n                        {event.name}\r\n                      </h3>\r\n                      {/* Tags for difficulty, event type, and internal type */}\r\n                      <div className=\"mt-2 flex flex-wrap gap-2\">\r\n                        <span className={`px-2 py-1 rounded-full text-xs font-semibold text-white ${getDifficultyColor(event.difficultyLevel)}`}>\r\n                          {event.difficultyLevel === 'low' ? 'Baja' : \r\n                          event.difficultyLevel === 'medium' ? 'Media' : 'Alta'} dificultad\r\n                        </span>\r\n                        <span className={`px-2 py-1 rounded-full text-xs font-semibold text-white ${getEventTypeColor(event.eventType)}`}>\r\n                          {event.eventType === 'Ride' ? 'Rodada' : 'Encuentro'}\r\n                        </span>\r\n                        <span className=\"px-2 py-1 rounded-full text-xs font-semibold text-white bg-indigo-500\">\r\n                          {event.internalEventType}\r\n                        </span>\r\n                      </div>\r\n                    </div>\r\n                    {/* Close button */}\r\n                    <button\r\n                      onClick={onClose}\r\n                      className=\"text-gray-400 hover:text-gray-500 focus:outline-none\"\r\n                      aria-label=\"Cerrar modal\" // Accessibility label for the close button\r\n                    >\r\n                      <svg className=\"h-6 w-6\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\r\n                        <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M6 18L18 6M6 6l12 12\" />\r\n                      </svg>\r\n                    </button>\r\n                  </div>\r\n\r\n                  {/* Event main image */}\r\n                  <div className=\"mt-4 rounded-lg overflow-hidden\">\r\n                    <img\r\n                      src={event.mainImage || \"/default-event-image.webp\"} // Fallback image if mainImage is not provided\r\n                      alt={event.name}\r\n                      className=\"w-full h-64 object-cover\"\r\n                      loading=\"lazy\"\r\n                      crossOrigin=\"anonymous\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Main content grid for event details */}\r\n                  <div className=\"mt-6 grid grid-cols-1 md:grid-cols-3 gap-6\">\r\n                    {/* Column 1: Event Information & Pricing */}\r\n                    <div className=\"col-span-1\">\r\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                        <h4 className=\"text-lg font-bold text-gray-800 mb-3\">Información del Evento</h4>\r\n                        \r\n                        <div className=\"space-y-3\">\r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-gray-500\">Fecha</p>\r\n                            <p className=\"text-sm text-gray-900\">\r\n                              {/* Format start date, and end date if available */}\r\n                              {format(parseISO(event.startDate), \"EEEE d 'de' MMMM yyyy\", { locale: es })}\r\n                              {event.endDate && ` al ${format(parseISO(event.endDate), \"EEEE d 'de' MMMM yyyy\", { locale: es })}`}\r\n                            </p>\r\n                          </div>\r\n                          \r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-gray-500\">Hora de encuentro</p>\r\n                            <p className=\"text-sm text-gray-900\">{formatTime(event.meetupTime)}</p>\r\n                          </div>\r\n                          \r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-gray-500\">Hora de salida</p>\r\n                            <p className=\"text-sm text-gray-900\">{formatTime(event.departureTime)}</p>\r\n                          </div>\r\n                          \r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-gray-500\">Duración</p>\r\n                            <p className=\"text-sm text-gray-900\">{event.durationDays} día(s)</p>\r\n                          </div>\r\n                          \r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-gray-500\">Lugar de encuentro</p>\r\n                            <p className=\"text-sm text-gray-900\">{event.departureLocation.address}, {event.departureLocation.city}</p>\r\n                          </div>\r\n                          \r\n                          {event.stayLocation && (\r\n                            <div>\r\n                              <p className=\"text-sm font-medium text-gray-500\">Lugar de estadía</p>\r\n                              <p className=\"text-sm text-gray-900\">{event.stayLocation.address}, {event.stayLocation.city}</p>\r\n                            </div>\r\n                          )}\r\n                          \r\n                          <div>\r\n                            <p className=\"text-sm font-medium text-gray-500\">Cupos disponibles</p>\r\n                            <p className=\"text-sm text-gray-900\">{event.remainingSpots} de {event.maxParticipants}</p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n\r\n                      <div className=\"bg-gray-50 p-4 rounded-lg mt-4\">\r\n                        <h4 className=\"text-lg font-bold text-gray-800 mb-3\">Precios</h4>\r\n                        \r\n                        <div className=\"space-y-2\">\r\n                          <div className=\"flex justify-between\">\r\n                            <span className=\"text-sm font-medium text-gray-600\">Piloto:</span>\r\n                            {/* Display price or 'Gratis' if not available */}\r\n                            <span className=\"text-sm font-bold text-gray-900\">${event.basePriceRider?.toLocaleString('es-CO') || 'Gratis'}</span>\r\n                          </div>\r\n                          <div className=\"flex justify-between\">\r\n                            <span className=\"text-sm font-medium text-gray-600\">Acompañante:</span>\r\n                            {/* Display price or 'Gratis' if not available */}\r\n                            <span className=\"text-sm font-bold text-gray-900\">${event.basePriceCompanion?.toLocaleString('es-CO') || 'Gratis'}</span>\r\n                          </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"mt-3 p-3 bg-yellow-50 rounded border border-yellow-100\">\r\n                          <p className=\"text-xs text-yellow-800\">\r\n                            * Los miembros del club obtienen descuentos según su membresía. \r\n                            <a href=\"/memberships\" className=\"text-yellow-600 hover:underline ml-1\">Ver membresías</a>\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Column 2: Itinerary & Activities */}\r\n                    <div className=\"col-span-1\">\r\n                      <div className=\"bg-gray-50 p-4 rounded-lg h-full\">\r\n                        <h4 className=\"text-lg font-bold text-gray-800 mb-3\">Itinerario</h4>\r\n                        \r\n                        {/* Map through itinerary days */}\r\n                        {event.itinerary?.map((day, dayIndex) => (\r\n                          <div key={dayIndex} className=\"mb-4\">\r\n                            <h5 className=\"font-semibold text-gray-700 mb-2\">Día {day.day}</h5>\r\n                            <div className=\"space-y-3\">\r\n                              {/* Map through activities for each day */}\r\n                              {day.activities.map((activity, activityIndex) => (\r\n                                <div key={activityIndex} className=\"flex\">\r\n                                  <div className=\"flex-shrink-0 w-16 text-sm font-medium text-gray-500\">\r\n                                    {activity.time}\r\n                                  </div>\r\n                                  <div className=\"ml-2 text-sm text-gray-700\">\r\n                                    {activity.description}\r\n                                  </div>\r\n                                </div>\r\n                              ))}\r\n                            </div>\r\n                          </div>\r\n                        ))}\r\n                        \r\n                        {/* Additional activities if available */}\r\n                        {event.activities && event.activities.length > 0 && (\r\n                          <>\r\n                            <h4 className=\"text-lg font-bold text-gray-800 mt-6 mb-3\">Actividades</h4>\r\n                            <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-700\">\r\n                              {event.activities.map((activity, index) => (\r\n                                <li key={index}>{activity}</li>\r\n                              ))}\r\n                            </ul>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n\r\n                    {/* Column 3: Includes, Requirements, Recommendations, Visits */}\r\n                    <div className=\"col-span-1\">\r\n                      <div className=\"bg-gray-50 p-4 rounded-lg\">\r\n                        <h4 className=\"text-lg font-bold text-gray-800 mb-3\">Incluye</h4>\r\n                        <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-700 mb-6\">\r\n                          {event.includes?.map((item, index) => (\r\n                            <li key={index}>\r\n                              <span className=\"font-medium\">{item.item}</span>\r\n                              {item.detail && <span className=\"block text-gray-600\">{item.detail}</span>}\r\n                            </li>\r\n                          ))}\r\n                        </ul>\r\n                        \r\n                        <h4 className=\"text-lg font-bold text-gray-800 mb-3\">Requisitos</h4>\r\n                        <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-700 mb-6\">\r\n                          {event.requirements?.map((req, index) => (\r\n                            <li key={index}>{req}</li>\r\n                          ))}\r\n                        </ul>\r\n                        \r\n                        <h4 className=\"text-lg font-bold text-gray-800 mb-3\">Recomendaciones</h4>\r\n                        <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-700 mb-6\">\r\n                          {event.recommendations?.map((rec, index) => (\r\n                            <li key={index}>{rec}</li>\r\n                          ))}\r\n                        </ul>\r\n                        \r\n                        {event.visits && event.visits.length > 0 && (\r\n                          <>\r\n                            <h4 className=\"text-lg font-bold text-gray-800 mb-3\">Lugares a visitar</h4>\r\n                            <ul className=\"list-disc list-inside space-y-1 text-sm text-gray-700\">\r\n                              {event.visits.map((visit, index) => (\r\n                                <li key={index}>{visit}</li>\r\n                              ))}\r\n                            </ul>\r\n                          </>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  {/* Additional Information section */}\r\n                  {event.additionalInformation && (\r\n                    <div className=\"mt-6 bg-blue-50 p-4 rounded-lg border border-blue-100\">\r\n                      <h4 className=\"text-lg font-bold text-blue-800 mb-2\">Información adicional</h4>\r\n                      <p className=\"text-sm text-blue-700 whitespace-pre-line\">{event.additionalInformation}</p>\r\n                    </div>\r\n                  )}\r\n\r\n                  {/* Call to action for participation */}\r\n                  <div className=\"mt-8 bg-slate-950 p-6 rounded-lg\">\r\n                    <div className=\"flex flex-col md:flex-row justify-between items-center\">\r\n                      <div className=\"mb-4 md:mb-0\">\r\n                        <h4 className=\"text-xl font-bold text-white\">¿Te gustaría participar en este evento?</h4>\r\n                        <p className=\"text-gray-300 mt-1\">\r\n                          Regístrate ahora y únete a la comunidad BSK Motorcycle Team\r\n                        </p>\r\n                      </div>\r\n                      <div className=\"flex space-x-3\">\r\n                        <a\r\n                          href=\"/register\" // Changed to /register as per App.jsx routes\r\n                          className=\"px-6 py-3 bg-green-400 hover:bg-green-400 text-slate-950 font-bold rounded-full transition duration-300\"\r\n                        >\r\n                          Regístrate ahora\r\n                        </a>\r\n                        <a\r\n                          href=\"/memberships\"\r\n                          className=\"px-6 py-3 bg-white hover:bg-gray-200 text-slate-950 font-bold rounded-full transition duration-300\"\r\n                        >\r\n                          Conoce las membresías\r\n                        </a>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"mt-4 text-center text-gray-300 text-sm\">\r\n                      <p>Los miembros registrados obtienen puntos por participación que pueden canjear por beneficios exclusivos.</p>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    );\r\n  };\r\n  \r\n  export default EventModal;","import React, { useState } from \"react\";\r\nimport { format, parseISO } from 'date-fns';\r\nimport { es } from 'date-fns/locale';\r\nimport { FaCalendarAlt } from 'react-icons/fa';\r\nimport Calendar from \"./Calendar\";\r\nimport EventModal from \"./EventModal\";\r\nimport { Event } from '../types'; // Import the Event interface\r\n\r\n/**\r\n * @interface EventsSectionProps\r\n * @property {Event[]} events - An array of event objects to display.\r\n * @property {boolean} loading - Indicates if the events are currently being loaded.\r\n * @property {string | null} error - Error message if events failed to load, otherwise null.\r\n */\r\ninterface EventsSectionProps {\r\n  events: Event[];\r\n  loading: boolean;\r\n  error: string | null;\r\n}\r\n\r\nconst EventsSection: React.FC<EventsSectionProps> = ({ events, loading, error }) => {\r\n  const [activeTab, setActiveTab] = useState<'events' | 'calendar'>('events');\r\n  const [currentMonth, setCurrentMonth] = useState<Date>(new Date());\r\n  const [selectedEvent, setSelectedEvent] = useState<Event | null>(null);\r\n\r\n  /**\r\n   * Handles the click event on an event card or calendar event, setting the selected event\r\n   * and opening the event modal.\r\n   * @param {Event} event - The event object that was clicked.\r\n   */\r\n  const handleEventClick = (event: Event): void => {\r\n    setSelectedEvent(event);\r\n  };\r\n\r\n  /**\r\n   * Handles the closing of the event modal, resetting the selected event state.\r\n   */\r\n  const handleCloseModal = (): void => {\r\n    setSelectedEvent(null);\r\n  };\r\n\r\n  return (\r\n    <section className=\"py-20 px-4 bg-slate-950 text-white\">\r\n      <div className=\"max-w-6xl mx-auto\">\r\n        <h2 className=\"text-4xl font-bold text-center mb-12\">\r\n          PRÓXIMOS <span className=\"text-green-400\">EVENTOS</span>\r\n        </h2>\r\n\r\n        <div className=\"mb-8 flex justify-center space-x-4\">\r\n          <button\r\n            onClick={() => setActiveTab('events')}\r\n            className={`px-6 py-2 rounded-full ${activeTab === 'events' ? 'bg-red-600 text-white' : 'bg-white text-slate-950'}`}\r\n            aria-pressed={activeTab === 'events'} // ARIA attribute for toggle buttons\r\n          >\r\n            Lista de Eventos\r\n          </button>\r\n          <button\r\n            onClick={() => setActiveTab('calendar')}\r\n            className={`px-6 py-2 rounded-full ${activeTab === 'calendar' ? 'bg-red-600 text-white' : 'bg-white text-slate-950'}`}\r\n            aria-pressed={activeTab === 'calendar'} // ARIA attribute for toggle buttons\r\n          >\r\n            Calendario\r\n          </button>\r\n        </div>\r\n\r\n        {activeTab === 'events' ? (\r\n          <>\r\n            {loading ? (\r\n              <div className=\"flex justify-center items-center h-64\">\r\n                <div className=\"animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-red-600\" role=\"status\" aria-label=\"Cargando eventos\"></div>\r\n              </div>\r\n            ) : error ? (\r\n              <div className=\"text-center py-10\">\r\n                <p className=\"text-red-400 mb-4\">Error al cargar los eventos: {error}</p>\r\n                <button \r\n                  onClick={() => window.location.reload()}\r\n                  className=\"bg-red-600 hover:bg-red-700 text-white font-bold py-2 px-4 rounded\"\r\n                >\r\n                  Reintentar\r\n                </button>\r\n              </div>\r\n            ) : (\r\n              <div className=\"grid md:grid-cols-3 gap-8\">\r\n                {events.length > 0 ? (\r\n                  events.map((event: Event) => (\r\n                    <div key={event._id} className=\"bg-white text-slate-950 rounded-xl overflow-hidden shadow-lg transition-transform hover:scale-105\">\r\n                      <div className=\"relative\" style={{ aspectRatio: '16/9' }}>\r\n                        <img\r\n                          src={event.mainImage || \"/default-event-image.webp\"}\r\n                          alt={event.name}\r\n                          className=\"w-full h-full object-cover\"\r\n                          loading=\"lazy\"\r\n                          crossOrigin=\"anonymous\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"p-6\">\r\n                        <h3 className=\"text-xl font-bold mb-2\">{event.name}</h3>\r\n                        <p className=\"text-red-600 font-semibold mb-3\">\r\n                          {/* Ensure event.startDate is a valid ISO string before parsing */}\r\n                          {event.startDate ? format(parseISO(event.startDate), \"EEEE d 'de' MMMM yyyy\", { locale: es }) : 'Fecha no disponible'}\r\n                        </p>\r\n                        <p className=\"text-gray-700 mb-4\">{event.description}</p>\r\n                        <p className=\"text-sm text-gray-600 flex items-center\">\r\n                          <svg className=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" aria-hidden=\"true\">\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\" />\r\n                            <path strokeLinecap=\"round\" strokeLinejoin=\"round\" strokeWidth=\"2\" d=\"M15 11a3 3 0 11-6 0 3 3 0 016 0z\" />\r\n                          </svg>\r\n                          {event.departureLocation?.address || 'Ubicación no disponible'}\r\n                        </p>\r\n                        <button \r\n                          onClick={() => handleEventClick(event)} // Use the new handler\r\n                          className=\"mt-4 w-full bg-slate-950 hover:bg-green-400 text-white py-2 rounded-full transition duration-300\"\r\n                          aria-label={`Más información sobre ${event.name}`}\r\n                        >\r\n                          Más información\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ))\r\n                ) : (\r\n                  <div className=\"col-span-3 text-center py-10\">\r\n                    <p className=\"text-xl\">No hay eventos programados en este momento</p>\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </>\r\n        ) : (\r\n          <div className=\"bg-white rounded-xl p-6 text-slate-950\">\r\n            <div className=\"flex items-center justify-center mb-4\">\r\n              <FaCalendarAlt className=\"text-red-600 mr-2\" aria-hidden=\"true\" />\r\n              <h3 className=\"text-xl font-bold\">Calendario de Eventos</h3>\r\n            </div>\r\n            <Calendar \r\n              events={events} \r\n              currentMonth={currentMonth} \r\n              setCurrentMonth={setCurrentMonth} \r\n              onEventClick={handleEventClick} // Pass the handler to Calendar\r\n            />\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Render EventModal conditionally */}\r\n      {selectedEvent && (\r\n        <EventModal \r\n          event={selectedEvent} \r\n          onClose={handleCloseModal} // Pass the close handler\r\n        />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default EventsSection;"],"names":["addDays","date","amount","_date","toDate","constructFrom","addMonths","dayOfMonth","endOfDesiredMonth","daysInMonth","isSameDay","dateLeft","dateRight","dateLeftStartOfDay","startOfDay","dateRightStartOfDay","endOfMonth","month","startOfMonth","endOfWeek","options","defaultOptions","getDefaultOptions","weekStartsOn","day","diff","isSameMonth","_dateLeft","_dateRight","subMonths","Calendar","events","currentMonth","setCurrentMonth","onEventClick","goToNextMonth","goToPrevMonth","formatDateSpanish","format","es","renderHeader","jsxs","jsx","FaArrowLeft","FaArrowRight","renderDays","dayNames","i","renderCells","monthStart","monthEnd","startDate","startOfWeek","endDate","rows","days","currentDay","dayEvents","event","eventDate","EventModal","onClose","useEffect","formatTime","timeString","hours","minutes","getDifficultyColor","difficulty","getEventTypeColor","type","parseISO","dayIndex","activity","activityIndex","Fragment","index","item","req","rec","visit","EventsSection","loading","error","activeTab","setActiveTab","useState","selectedEvent","setSelectedEvent","handleEventClick","handleCloseModal","FaCalendarAlt"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7]}