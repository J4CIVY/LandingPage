import { z } from 'zod';

export const userSchema = z.object({
  documentType: z.string().nonempty("Campo obligatorio"),
  documentNumber: z.string().nonempty("Campo obligatorio").regex(/^[0-9]+$/, "Solo números permitidos"),
  firstName: z.string().nonempty("Campo obligatorio").max(50, "Máximo 50 caracteres"),
  lastName: z.string().nonempty("Campo obligatorio").max(50, "Máximo 50 caracteres"),
  birthDate: z.string().nonempty("Campo obligatorio"),
  birthPlace: z.string().nonempty("Campo obligatorio"),
  phone: z.string().nonempty("Campo obligatorio"),
  whatsapp: z.string().optional(),
  email: z.string().nonempty("Campo obligatorio").email("Correo electrónico no válido"),
  address: z.string().nonempty("Campo obligatorio"),
  neighborhood: z.string().optional(),
  city: z.string().nonempty("Campo obligatorio"),
  country: z.string().nonempty("Campo obligatorio"),
  postalCode: z.string().optional(),
  binaryGender: z.string().nonempty("Campo obligatorio"),
  genderIdentity: z.string().optional(),
  occupation: z.string().optional(),
  discipline: z.string().optional(),
  bloodType: z.string().optional(),
  rhFactor: z.string().optional(),
  allergies: z.string().optional(),
  healthInsurance: z.string().optional(),
  emergencyContactName: z.string().nonempty("Campo obligatorio"),
  emergencyContactRelationship: z.string().nonempty("Campo obligatorio"),
  emergencyContactPhone: z.string().nonempty("Campo obligatorio"),
  emergencyContactNeighborhood: z.string().optional(),
  emergencyContactCity: z.string().nonempty("Campo obligatorio"),
  emergencyContactCountry: z.string().nonempty("Campo obligatorio"),
  motorcyclePlate: z.string().nonempty("Campo obligatorio"),
  motorcycleBrand: z.string().nonempty("Campo obligatorio"),
  motorcycleModel: z.string().nonempty("Campo obligatorio"),
  motorcycleYear: z.string().nonempty("Campo obligatorio"),
  motorcycleDisplacement: z.number().min(50, "El cilindraje debe ser al menos 50cc.").max(3000, "El cilindraje no puede exceder los 3000cc."),
  password: z.string().nonempty("Campo obligatorio").min(8, "La contraseña debe tener al menos 8 caracteres."),
  confirmPassword: z.string().nonempty("Campo obligatorio"),
  dataConsent: z.boolean().refine(val => val === true, "Debes aceptar el consentimiento de datos."),
  liabilityWaiver: z.boolean().refine(val => val === true, "Debes aceptar la exención de responsabilidad."),
  termsAcceptance: z.boolean().refine(val => val === true, "Debes aceptar los términos y condiciones."),
}).refine(data => data.password === data.confirmPassword, {
  message: "Las contraseñas no coinciden.",
  path: ["confirmPassword"],
});

export type UserSchema = z.infer<typeof userSchema>;
